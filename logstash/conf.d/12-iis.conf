filter {
    if [fileset][module] == "iis" 
    {
        if [fileset][name] == "access" 
        {
            if [message] =~ "^#" {
                drop {}
            }

            grok {
                match => ["message", "%{TIMESTAMP_ISO8601:[iis][access][time]} %{WORD:[iis][access][service_name]} %{NOTSPACE:[iis][access][server_name]} %{IPORHOST:[iis][access][server_ip]} %{WORD:[iis][access][method]} %{NOTSPACE:[iis][access][uri_stem]} %{NOTSPACE:[iis][access][query]} %{NUMBER:[iis][access][port]} - %{IPORHOST:[iis][access][remote_ip]} %{NOTSPACE:[iis][access][http_version]} %{NOTSPACE:[iis][access][agent]} - %{NOTSPACE:[iis][access][request_path]} %{NOTSPACE:[iis][access][request_host]} %{NUMBER:[iis][access][response_code]} %{NUMBER:[iis][access][sub_response]} %{NUMBER:[iis][access][win32response]} %{NUMBER:[iis][access][body_sent][bytes]} %{NUMBER:[iis][access][body_received][bytes]} %{NUMBER:[iis][access][time_taken]}"]
            }
            date {
                match => [ "[iis][access][time]", "YYYY-MM-dd HH:mm:ss" ]
                timezone => "Etc/UTC"
            }
            if [iis][access][body_sent][bytes] {
                ruby {
                    code => "event['kilobytesSent'] = event['bytesSent'].to_i / 1024.0"
                }
            }
            if [iis][access][body_received][bytes] {
                ruby {
                    code => "event['kilobytesReceived'] = event['bytesReceived'].to_i / 1024.0"
                }
            }
            mutate {
                convert => ["[iis][access][body_sent][bytes]", "integer"]
                convert => ["[iis][access][body_received][bytes]", "integer"]
                convert => ["[iis][access][time_taken]", "integer"]

            }
            useragent {
                source=> "[iis][access][agent]"
                prefix=> "[iis][access][user_agent]"
            }
            geoip {
                source => "[iis][access][remote_ip]"
                target => "[iis][access][geoip]"
            }
        }
    }
}

